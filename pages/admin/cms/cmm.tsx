import { useEffect, useState } from 'react'
import Head from "next/head";
import AdminLayout from "@/layouts/AdminLayout"
import AuthHOC from '@/components/AuthHOC'
import Table from '@/components/Table'
import { ICms } from "@/interfaces"
import Button from '@/components/Button';
import { useRouter } from 'next/router';
import usePost from '@/hooks/usePost';
import { toast } from 'react-toastify';
import Loader from '@/components/Loader';



const CMS = () => {
  const [data, setData] = useState<ICms[]>([])
  const router = useRouter()

  const { loading, error, post, data: deleted } = usePost({ 
    api: "/cms",
    method: "DELETE",
    onSuccess: () => {
        toast('dEleted successfully')
    } 
})

const deleteCms = (id: string, route: string) => {
    post({
      id,
    }, route)
}




const colums = [
  {
    name: "identifier",
    label: "Title",
    options: {
      filter: true,
      sort: true,
    },
  },
  {
    name: "edit",
    label: "Action",
    extra: true,
    custom: (val: string, meta: any) => {
      return  (
        <div className="justify-center gap-4">
          <Button onClick={() => router.push(`/admin/cms/${meta?._id}`)} className="p-2 px-4 text-white rounded-full">Edit</Button>
          {/* <BiEdit size="1.2rem" className="text-orange" />
          <MdOutlineDelete size="1.2rem" className="text-red-400" /> */}
        </div>
      )
    },
  },
];

  useEffect(() => {
    const fetchUser = async () => {
      try {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/cms`)
        const data = await res.json()
        
        if (!res.ok) throw new Error(data.message)

        console.log({data})
        setData(data)
      } catch (error) {
        console.log({error})
      }

    }

    fetchUser()
  }, [deleted])

  return (
    <AdminLayout>
      <Head>
        <title>Brilliant Brains</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/faviconimg.png" />
      </Head>
      {loading && <Loader modalOpen={true} />}
      <div className='h-full p-4 py-20 overflow-y-auto sm:px-12'>
        <div className="flex items-center justify-between gap-4 mb-16">
            <h1 className='text-3xl text-black/70 font-argentinum'>Content Management System</h1>
            {/* <Button onClick={() => router.push("/admin/cms/add")} className="px-4 py-2 text-sm text-white sm:px-6 rounded-xl whitespace-nowrap">Add Board Member</Button> */}
        </div>
        <Table<ICms> data={data} columns={colums} className={''} />
      </div>
    </AdminLayout>
  );
}


export default AuthHOC(CMS)

